package ua.andre.libraryapp.models;

import jakarta.persistence.*;

import java.util.List;

//create table "customer"(
//        id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
//        "name" varchar NOT NULL CHECK (LENGTH("name") BETWEEN 2 AND 30),
//        surname varchar NOT NULL CHECK (LENGTH(surname) BETWEEN 2 AND 30),
//        age int check (age > 0)
//        )
@Entity
@Table(name = "customer")
public class User {
    @Id
    @Column(name = "id")
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private int id;

    //@NotEmpty(message = "Name should not be empty!")
    //@Size(min = 2, max = 30, message = "Name should be between 2 and 30 characters!")
    @Column(name = "name")
    private String name;

    //@NotEmpty(message = "Surname should not be empty!")
    //@Size(min = 2, max = 30, message = "Surname should be between 2 and 30 characters!")
    @Column(name = "surname")
    private String surname;

    //@NotEmpty(message = "Age should not be empty!")
    //@Min(value = 0, message = "Age should be greater than zero!")
    @Column(name = "age")
    private int age;

    @OneToMany(mappedBy = "owner", fetch = FetchType.EAGER)
    List<Book> books;

    @Override
    public String toString() {
        return "User{" +
                "id=" + id +
                ", name='" + name + '\'' +
                ", surname='" + surname + '\'' +
                ", age=" + age +
                '}';
    }

    public User() {
    }

    public User(String name, String surname, int age) {
        this.name = name;
        this.surname = surname;
        this.age = age;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getSurname() {
        return surname;
    }

    public void setSurname(String surname) {
        this.surname = surname;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public List<Book> getBooks() {
        return books;
    }

    public void setBooks(List<Book> books) {
        this.books = books;
    }
}

//    INSERT INTO "user" ("name", "surname", "age") VALUES ('Alice', 'Johnson', 22);
//    INSERT INTO "user" ("name", "surname", "age") VALUES ('Bob', 'Smith', 35);
//    INSERT INTO "user" ("name", "surname", "age") VALUES ('Charlie', 'Williams', 41);
//    INSERT INTO "user" ("name", "surname", "age") VALUES ('David', 'Brown', 28);
//    INSERT INTO "user" ("name", "surname", "age") VALUES ('Emma', 'Taylor', 19);
//    INSERT INTO "user" ("name", "surname", "age") VALUES ('Frank', 'Anderson', 56);
//    INSERT INTO "user" ("name", "surname", "age") VALUES ('Grace', 'Martinez', 33);
//    INSERT INTO "user" ("name", "surname", "age") VALUES ('Henry', 'Davis', 48);
//    INSERT INTO "user" ("name", "surname", "age") VALUES ('Isabella', 'Wilson', 27);
//    INSERT INTO "user" ("name", "surname", "age") VALUES ('Jack', 'Thomas', 23);
//    INSERT INTO "user" ("name", "surname", "age") VALUES ('Kate', 'Lee', 37);
//    INSERT INTO "user" ("name", "surname", "age") VALUES ('Liam', 'Garcia', 45);
//    INSERT INTO "user" ("name", "surname", "age") VALUES ('Mia', 'Rodriguez', 20);
//    INSERT INTO "user" ("name", "surname", "age") VALUES ('Noah', 'Hernandez', 29);
//    INSERT INTO "user" ("name", "surname", "age") VALUES ('Olivia', 'Lopez', 31);
